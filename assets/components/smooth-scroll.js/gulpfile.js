var gulp=require("gulp"),fs=require("fs"),del=require("del"),lazypipe=require("lazypipe"),plumber=require("gulp-plumber"),flatten=require("gulp-flatten"),tap=require("gulp-tap"),rename=require("gulp-rename"),header=require("gulp-header"),footer=require("gulp-footer"),watch=require("gulp-watch"),livereload=require("gulp-livereload"),package=require("./package.json"),jshint=require("gulp-jshint"),stylish=require("jshint-stylish"),concat=require("gulp-concat"),uglify=require("gulp-uglify"),karma=require("gulp-karma"),sass=require("gulp-sass"),prefix=require("gulp-autoprefixer"),minify=require("gulp-minify-css"),svgmin=require("gulp-svgmin"),svgstore=require("gulp-svgstore"),markdown=require("gulp-markdown"),fileinclude=require("gulp-file-include"),paths={input:"src/**/*",output:"dist/",scripts:{input:"src/js/*",output:"dist/js/"},styles:{input:"src/sass/**/*.{scss,sass}",output:"dist/css/"},svgs:{input:"src/svg/*",output:"dist/svg/"},"static":"src/static/**",test:{input:"src/js/**/*.js",karma:"test/karma.conf.js",spec:"test/spec/**/*.js",coverage:"test/coverage/",results:"test/results/"},docs:{input:"src/docs/*.{html,md,markdown}",output:"docs/",templates:"src/docs/_templates/",assets:"src/docs/assets/**"}},banner={full:"/**\n * <%= package.name %> v<%= package.version %>\n * <%= package.description %>, by <%= package.author.name %>.\n * <%= package.repository.url %>\n * \n * Free to use under the MIT License.\n * http://gomakethings.com/mit/\n */\n\n",min:"/** <%= package.name %> v<%= package.version %>, by Chris Ferdinandi | <%= package.repository.url %> | Licensed under MIT: http://gomakethings.com/mit/ */\n"};gulp.task("build:scripts",["clean:dist"],function(){var e=lazypipe().pipe(header,banner.full,{"package":package}).pipe(gulp.dest,paths.scripts.output).pipe(rename,{suffix:".min"}).pipe(uglify).pipe(header,banner.min,{"package":package}).pipe(gulp.dest,paths.scripts.output);return gulp.src(paths.scripts.input).pipe(plumber()).pipe(tap(function(s,t){if(s.isDirectory()){var p=s.relative+".js";return gulp.src(s.path+"/*.js").pipe(concat(p)).pipe(e())}})).pipe(e())}),gulp.task("build:styles",["clean:dist"],function(){return gulp.src(paths.styles.input).pipe(plumber()).pipe(sass({outputStyle:"expanded",sourceComments:!0})).pipe(flatten()).pipe(prefix({browsers:["last 2 version","> 1%"],cascade:!0,remove:!0})).pipe(header(banner.full,{"package":package})).pipe(gulp.dest(paths.styles.output)).pipe(rename({suffix:".min"})).pipe(minify()).pipe(header(banner.min,{"package":package})).pipe(gulp.dest(paths.styles.output))}),gulp.task("build:svgs",["clean:dist"],function(){return gulp.src(paths.svgs.input).pipe(plumber()).pipe(tap(function(e,s){if(e.isDirectory()){var t=e.relative+".svg";return gulp.src(e.path+"/*.svg").pipe(svgmin()).pipe(svgstore({fileName:t,prefix:"icon-",inlineSvg:!0})).pipe(gulp.dest(paths.svgs.output))}})).pipe(svgmin()).pipe(svgstore({fileName:"icons.svg",prefix:"icon-",inlineSvg:!0})).pipe(gulp.dest(paths.svgs.output))}),gulp.task("copy:static",["clean:dist"],function(){return gulp.src(paths["static"]).pipe(plumber()).pipe(gulp.dest(paths.output))}),gulp.task("lint:scripts",function(){return gulp.src(paths.scripts.input).pipe(plumber()).pipe(jshint()).pipe(jshint.reporter("jshint-stylish"))}),gulp.task("clean:dist",function(){del.sync([paths.output,paths.test.coverage,paths.test.results])}),gulp.task("test:scripts",function(){return gulp.src([paths.test.input].concat([paths.test.spec])).pipe(plumber()).pipe(karma({configFile:paths.test.karma})).on("error",function(e){throw e})}),gulp.task("build:docs",["compile","clean:docs"],function(){return gulp.src(paths.docs.input).pipe(plumber()).pipe(fileinclude({prefix:"@@",basepath:"@file"})).pipe(tap(function(e,s){return/\.md|\.markdown/.test(e.path)?s.through(markdown):void 0})).pipe(header(fs.readFileSync(paths.docs.templates+"/_header.html","utf8"))).pipe(footer(fs.readFileSync(paths.docs.templates+"/_footer.html","utf8"))).pipe(gulp.dest(paths.docs.output))}),gulp.task("copy:dist",["compile","clean:docs"],function(){return gulp.src(paths.output+"/**").pipe(plumber()).pipe(gulp.dest(paths.docs.output+"/dist"))}),gulp.task("copy:assets",["clean:docs"],function(){return gulp.src(paths.docs.assets).pipe(plumber()).pipe(gulp.dest(paths.docs.output+"/assets"))}),gulp.task("clean:docs",function(){return del.sync(paths.docs.output)}),gulp.task("listen",function(){livereload.listen(),gulp.watch(paths.input).on("change",function(e){gulp.start("default"),gulp.start("refresh")})}),gulp.task("refresh",["compile","docs"],function(){livereload.changed()}),gulp.task("compile",["lint:scripts","clean:dist","copy:static","build:scripts","build:svgs","build:styles"]),gulp.task("docs",["clean:docs","build:docs","copy:dist","copy:assets"]),gulp.task("tests",["test:scripts"]),gulp.task("default",["compile","docs","tests"]),gulp.task("watch",["listen","default"]);